{"ast":null,"code":"var _jsxFileName = \"/Users/jusharra/Documents/GitHub/Netflix-Starter/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport { Logo } from \"../images/Netflix\";\nimport { ConnectButton, Icon, TabList, Tab, Button, Modal, useNotification } from \"web3uikit\";\nimport { movies } from \"../helpers/library\";\nimport { useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [selectedFilm, setSelectedFilm] = useState();\n  const [myMovies, setMyMovies] = useState();\n  const {\n    isAuthenticated,\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function fetchMyList() {\n      try {\n        const theList = await Moralis.Cloud.run(\"getMyList\", {\n          addrs: account\n        });\n        const filterdA = movies.filter(function (e) {\n          return theList.indexOf(e.Name) > -1;\n        });\n        setMyMovies(filterdA);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchMyList();\n  }, [account]);\n  const dispatch = useNotification();\n\n  const handleNewNotification = () => {\n    dispatch({\n      type: \"error\",\n      message: \"Pleaser Connect Your Crypto Wallet\",\n      title: \"Not Authenticated\",\n      position: \"topL\"\n    });\n  };\n\n  const handleAddNotification = () => {\n    dispatch({\n      type: \"success\",\n      message: \"Movie Added to List\",\n      title: \"Success\",\n      position: \"topL\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        fill: \"#ffffff\",\n        size: 24,\n        svg: \"bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topBanner\",\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        defaultActiveKey: 1,\n        tabStyle: \"bar\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 1,\n          tabName: \"Movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scene\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movies[0].Scene,\n              className: \"sceneImg\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 5\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"sceneLogo\",\n              src: movies[0].Logo,\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 38\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sceneDesc\",\n              children: [\" \", movies[0].Description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playButton\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                icon: \"chevronRightX2\",\n                text: \"Play\",\n                theme: \"secondary\",\n                type: \"button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"plus\",\n                text: \"Add to My List\",\n                theme: \"translucent\",\n                type: \"button\",\n                onClick: () => {\n                  console.log(myMovies);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 5\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \" Movies \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 5\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thumbs\",\n            children: [\" \", movies && movies.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.Thumnbnail,\n                className: \"thumbnail\",\n                onClick: () => {\n                  setSelectedFilm(e);\n                  setVisible(true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 18\n              }, this);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 2,\n          tabName: \"Series\",\n          isDisabled: true,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 3,\n          tabName: \"MyList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ownListContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \" Your Library \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 5\n            }, this), \" \", myMovies && isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ownThumbs\",\n                children: [\" \", myMovies.map(e => {\n                  return /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: e.Thumnbnail,\n                    className: \"thumbnail\",\n                    onClick: () => {\n                      setSelectedFilm(e);\n                      setVisible(true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 22\n                  }, this);\n                }), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 9\n              }, this), \" \"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ownThumbs\",\n              children: \"You need to Authenicate TO View Your Own list \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 5\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), \" \", selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          onCloseButtonPressed: () => setVisible(false),\n          isVisible: visible,\n          hasFooter: false,\n          width: \"1000px\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedFilm.Scene,\n              className: \"modalImg\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"modalLogo\",\n              src: selectedFilm.Logo,\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 42\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modalPlayButton\",\n              children: [\" \", isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/player\",\n                  state: selectedFilm.Movie,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    icon: \"chevronRightX2\",\n                    text: \"Play\",\n                    theme: \"secondary\",\n                    type: \"button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 13\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"plus\",\n                  text: \"Add to My List\",\n                  theme: \"translucent\",\n                  type: \"button\",\n                  onClick: async () => {\n                    await Moralis.Cloud.run(\"updateMyList\", {\n                      addrs: account,\n                      newFav: selectedFilm.Name\n                    });\n                    handleAddNotification();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 20\n                }, this), \" \"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"chevronRightX2\",\n                  text: \"Play\",\n                  theme: \"secondary\",\n                  type: \"button\",\n                  onClick: handleNewNotification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 13\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"plus\",\n                  text: \"Add to My List\",\n                  theme: \"translucent\",\n                  type: \"button\",\n                  onClick: handleNewNotification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 16\n                }, this), \" \"]\n              }, void 0, true), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", selectedFilm.Year, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 9\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", selectedFilm.Duration, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 20\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 9\n                }, this), \" \", selectedFilm.Description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 9\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detailedInfo\",\n                children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"deets\",\n                  children: [\" \", selectedFilm.Genre, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 9\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 20\n                }, this), \"Actors:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"deets\",\n                  children: [\" \", selectedFilm.Actors, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 9\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 15\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true);\n};\n\n_s(Home, \"/vcTkSgpUBET+/eYXY6NAMi1IpE=\", false, function () {\n  return [useMoralis, useNotification];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jusharra/Documents/GitHub/Netflix-Starter/src/pages/Home.js"],"names":["React","useEffect","Link","Logo","ConnectButton","Icon","TabList","Tab","Button","Modal","useNotification","movies","useState","useMoralis","Home","visible","setVisible","selectedFilm","setSelectedFilm","myMovies","setMyMovies","isAuthenticated","Moralis","account","fetchMyList","theList","Cloud","run","addrs","filterdA","filter","e","indexOf","Name","error","console","dispatch","handleNewNotification","type","message","title","position","handleAddNotification","Scene","Description","log","map","Thumnbnail","Movie","newFav","Year","Duration","Genre","Actors"],"mappings":"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","sourcesContent":["import React, {\n  useEffect\n} from \"react\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport \"./Home.css\";\nimport {\n  Logo\n} from \"../images/Netflix\";\nimport {\n  ConnectButton,\n  Icon,\n  TabList,\n  Tab,\n  Button,\n  Modal,\n  useNotification,\n} from \"web3uikit\";\nimport {\n  movies\n} from \"../helpers/library\";\nimport {\n  useState\n} from \"react\";\nimport {\n  useMoralis\n} from \"react-moralis\";\n\nconst Home = () => {\n  const [visible, setVisible] = useState(false);\n  const [selectedFilm, setSelectedFilm] = useState();\n  const [myMovies, setMyMovies] = useState();\n  const {\n    isAuthenticated,\n    Moralis,\n    account\n  } = useMoralis();\n\n  useEffect(() => {\n    async function fetchMyList() {\n\n      try {\n        const theList = await Moralis.Cloud.run(\"getMyList\", {\n          addrs: account\n        });\n\n        const filterdA = movies.filter(function (e) {\n          return theList.indexOf(e.Name) > -1;\n        })\n\n        setMyMovies(filterdA);\n\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    fetchMyList();\n  }, [account])\n\n  const dispatch = useNotification();\n\n  const handleNewNotification = () => {\n    dispatch({\n      type: \"error\",\n      message: \"Pleaser Connect Your Crypto Wallet\",\n      title: \"Not Authenticated\",\n      position: \"topL\",\n    });\n  };\n\n  const handleAddNotification = () => {\n    dispatch({\n      type: \"success\",\n      message: \"Movie Added to List\",\n      title: \"Success\",\n      position: \"topL\",\n    });\n  };\n\n  return ( <\n    >\n    <\n    div className = \"logo\" >\n    <\n    Logo / >\n    <\n    /div> <\n    div className = \"connect\" >\n    <\n    Icon fill = \"#ffffff\"\n    size = {\n      24\n    }\n    svg = \"bell\" / >\n    <\n    ConnectButton / >\n    <\n    /div> <\n    div className = \"topBanner\" >\n    <\n    TabList defaultActiveKey = {\n      1\n    }\n    tabStyle = \"bar\" >\n    <\n    Tab tabKey = {\n      1\n    }\n    tabName = {\n      \"Movies\"\n    } >\n    <\n    div className = \"scene\" >\n    <\n    img src = {\n      movies[0].Scene\n    }\n    className = \"sceneImg\" > < /img> <\n    img className = \"sceneLogo\"\n    src = {\n      movies[0].Logo\n    } > < /img> <\n    p className = \"sceneDesc\" > {\n      movies[0].Description\n    } < /p> <\n    div className = \"playButton\" >\n    <\n    Button icon = \"chevronRightX2\"\n    text = \"Play\"\n    theme = \"secondary\"\n    type = \"button\" /\n    >\n    <\n    Button icon = \"plus\"\n    text = \"Add to My List\"\n    theme = \"translucent\"\n    type = \"button\"\n    onClick = {\n      () => {\n        console.log(myMovies);\n      }\n    }\n    /> <\n    /div> <\n    /div>\n\n    <\n    div className = \"title\" > Movies < /div> <\n    div className = \"thumbs\" > {\n      movies &&\n      movies.map((e) => {\n        return ( <\n          img src = {\n            e.Thumnbnail\n          }\n          className = \"thumbnail\"\n          onClick = {\n            () => {\n              setSelectedFilm(e);\n              setVisible(true);\n            }\n          } >\n          < /img>\n        );\n      })\n    } <\n    /div> <\n    /Tab> <\n    Tab tabKey = {\n      2\n    }\n    tabName = {\n      \"Series\"\n    }\n    isDisabled = {\n      true\n    } > < /Tab> <\n    Tab tabKey = {\n      3\n    }\n    tabName = {\n      \"MyList\"\n    } >\n    <\n    div className = \"ownListContent\" >\n    <\n    div className = \"title\" > Your Library < /div> {\n      myMovies && isAuthenticated ? ( <\n        >\n        <\n        div className = \"ownThumbs\" > {\n          myMovies.map((e) => {\n            return ( <\n              img src = {\n                e.Thumnbnail\n              }\n              className = \"thumbnail\"\n              onClick = {\n                () => {\n                  setSelectedFilm(e);\n                  setVisible(true);\n                }\n              } >\n              < /img>\n            );\n          })\n        } <\n        /div> <\n        />\n      ) : ( <\n        div className = \"ownThumbs\" >\n        You need to Authenicate TO View Your Own list <\n        /div>\n      )\n    } <\n    /div> <\n    /Tab> <\n    /TabList> {\n      selectedFilm && ( <\n        div className = \"modal\" >\n        <\n        Modal onCloseButtonPressed = {\n          () => setVisible(false)\n        }\n        isVisible = {\n          visible\n        }\n        hasFooter = {\n          false\n        }\n        width = \"1000px\" >\n        <\n        div className = \"modalContent\" >\n        <\n        img src = {\n          selectedFilm.Scene\n        }\n        className = \"modalImg\" > < /img> <\n        img className = \"modalLogo\"\n        src = {\n          selectedFilm.Logo\n        } > < /img> <\n        div className = \"modalPlayButton\" > {\n          isAuthenticated ? ( <\n            >\n            <\n            Link to = \"/player\"\n            state = {\n              selectedFilm.Movie\n            } >\n            <\n            Button icon = \"chevronRightX2\"\n            text = \"Play\"\n            theme = \"secondary\"\n            type = \"button\" /\n            >\n            <\n            /Link> <\n            Button icon = \"plus\"\n            text = \"Add to My List\"\n            theme = \"translucent\"\n            type = \"button\"\n            onClick = {\n              async () => {\n                await Moralis.Cloud.run(\"updateMyList\", {\n                  addrs: account,\n                  newFav: selectedFilm.Name,\n                });\n                handleAddNotification();\n              }\n            }\n            /> <\n            />\n          ) : ( <\n            >\n            <\n            Button icon = \"chevronRightX2\"\n            text = \"Play\"\n            theme = \"secondary\"\n            type = \"button\"\n            onClick = {\n              handleNewNotification\n            }\n            /> <\n            Button icon = \"plus\"\n            text = \"Add to My List\"\n            theme = \"translucent\"\n            type = \"button\"\n            onClick = {\n              handleNewNotification\n            }\n            /> <\n            />\n          )\n        } <\n        /div> <\n        div className = \"movieInfo\" >\n        <\n        div className = \"description\" >\n        <\n        div className = \"details\" >\n        <\n        span > {\n          selectedFilm.Year\n        } < /span> <\n        span > {\n          selectedFilm.Duration\n        } < /span> <\n        /div> {\n          selectedFilm.Description\n        } <\n        /div> <\n        div className = \"detailedInfo\" >\n        Genre:\n        <\n        span className = \"deets\" > {\n          selectedFilm.Genre\n        } < /span> <\n        br / >\n        Actors:\n        <\n        span className = \"deets\" > {\n          selectedFilm.Actors\n        } < /span> <\n        /div> <\n        /div> <\n        /div> <\n        /Modal> <\n        /div>\n      )\n    } <\n    /div> <\n    />\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}